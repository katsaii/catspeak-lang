# Catspeak cartridge layout
# =========================

common:
  dbg: u32    #< The type used for debug info.
  instr: u8   #< The type used for instruction tags.

# The header comes first. In the order they are defined below, these values are
# written to the start of the buffer.

head-order: [signal, title, version]
head:
  signal:
    value: 0xC7544E # the colour of Wanda, if you know you know
    type: u32
  title:
    value: "CATSPEAK CART"
    type: string
  version:
    value: 1
    type: u8

# Directly after the header begins the program code. This will always start
# with the main function definition. In the order they are defined below, space
# is reserved within the buffer.

func-order: [offset, locals, params]
func:
  # Relative to the start of the buffer, points to the end of the function.
  offset: u32
  locals: u32 #< The max number of local variables this function can have.
  params: u32 #< The number of named parameters this function has.

# After the header, an offset of type common:type-offset is written. This offset
# points to a location (relative to the start of the buffer) where additional
# metadata is stored.


meta-offset: u32
meta:
  - name: "filepath"
    type: string
  #- name: "reg"
  #  many: u32
  - name: "global"
    many: u32
    type: string

func:
  locals: u32
  params: u32

instrs:
  type: u8
  set:

    - name: "const number"
      name-short: "get_n"
      desc: "push a numeric constant onto the stack"
      repr: 0x00
      args:
        - name: "n"
          desc: "the number to emit"
          type: f64
        - name: "location"
          desc: "the approximate location of this instruction in the source code"
          type: u32
          default: CATSPEAK_NOLOCATION

    - name: "const bool"
      name-short: "get_b"
      desc: "push a boolean constant onto the stack"
      repr: 0x01
      args:
        - name: "condition"
          desc: "the bool to emit"
          type: u8
        - name: "location"
          desc: "the approximate location of this instruction in the source code"
          type: u32
          default: CATSPEAK_NOLOCATION

    - name: "const string"
      name-short: "get_s"
      desc: "push a string constant onto the stack"
      repr: 0x02
      args:
        - name: "string_"
          desc: "the string to emit"
          type: string
        - name: "location"
          desc: "the approximate location of this instruction in the source code"
          type: u32
          default: CATSPEAK_NOLOCATION

    - name: "return"
      name-short: "ret"
      desc: "pop the top value off of the stack, and return it from the current function"
      repr: 0x03
      args:
        - name: "location"
          desc: "the approximate location of this instruction in the source code"
          type: u32
          default: CATSPEAK_NOLOCATION
      stackargs:
        - name: "value"
          desc: "the value to return"